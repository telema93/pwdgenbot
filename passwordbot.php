<?php

$config = require 'passwordbot_config.php';
$token = $config['bot_token'];
$api = "https://api.telegram.org/bot$token";

require_once 'passwordbot_db.php';

// === –ü–æ–ª—É—á–µ–Ω–∏–µ update –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
$update = json_decode(file_get_contents("php://input"), true);
file_put_contents(__DIR__ . "/logs.txt", json_encode($update, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "\n---\n", FILE_APPEND);

// === –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
$callback = $update['callback_query'] ?? null;
$message_obj = $update['message'] ?? null;
$message = $message_obj['text'] ?? '';
$chat_id = $message_obj['chat']['id'] ?? null;
$user_id = $message_obj['from']['id'] ?? null;

// === –û–±—Ä–∞–±–æ—Ç–∫–∞ callback_query
if ($callback) {
    $chat_id = $callback['message']['chat']['id'] ?? null;
    $user_id = $callback['from']['id'] ?? null;
    $data = $callback['data'] ?? '';

    if (!check_limit($user_id)) {
        sendMessage($chat_id, "‚õî –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π. –ú–∞–∫—Å–∏–º—É–º 1000 –≤ —Å—É—Ç–∫–∏.");
        exit;
    }

    if ($data === 'simple') {
        $password = generate_simple_password(12);
    } elseif ($data === 'normal') {
        $password = generate_password(12, ['A'=>2,'l'=>2,'d'=>2,'s'=>2]);
    } elseif ($data === 'strong') {
        $password = generate_password(20, ['A'=>3,'l'=>3,'d'=>3,'s'=>3]);
    } elseif ($data === 'admin_report' && $user_id == $config['admin_id']) {
        $report = get_admin_report();
        answerCallback($callback['id']);
        sendMessage($chat_id, $report);
        exit;
    } else {
        $password = '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.';
    }

    answerCallback($callback['id']);
    sendMessage($chat_id, "<pre>$password</pre>", "HTML");
    exit;
}

// === –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
if (!$message && isset($update['message']['entities'])) {
    sendIntro($chat_id);
    exit;
}

if (!$user_id || !$chat_id || !check_limit($user_id)) {
    sendMessage($chat_id, "‚õî –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π. –ú–∞–∫—Å–∏–º—É–º 1000 –≤ —Å—É—Ç–∫–∏.");
    exit;
}

// –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
$lang = $message_obj['from']['language_code'] ?? null;
$is_premium = $message_obj['from']['is_premium'] ?? null;
update_user_info($user_id, $lang, $is_premium ? 1 : 0);

// –ï—Å–ª–∏ –≥—Ä—É–ø–ø–∞ ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
if ($message_obj['chat']['type'] !== 'private') {
    exit;
}

// === –ü–∞—Ä—Å–∏–Ω–≥ —à–∞–±–ª–æ–Ω–∞
preg_match('/(\d+)([Alds\d]*)/i', $message, $matches);
if (!isset($matches[1])) {
    sendIntro($chat_id);
    exit;
}

$length = (int)$matches[1];
$options_str = $matches[2] ?? '';
$requirements = ['A' => 0, 'l' => 0, 'd' => 0, 's' => 0];

preg_match_all('/([Alds])(\d*)/i', $options_str, $opt_matches, PREG_SET_ORDER);
foreach ($opt_matches as $opt) {
    $type = strtoupper($opt[1]);
    $count = isset($opt[2]) && $opt[2] !== '' ? (int)$opt[2] : 1;
    if (isset($requirements[$type])) {
        $requirements[$type] = $count;
    }
}

if (array_sum($requirements) === 0) {
    $length = 12;
    $requirements = ['A' => 2, 'l' => 2, 'd' => 2, 's' => 2];
}

$password = generate_password($length, $requirements);
sendMessage($chat_id, "<pre>$password</pre>", "HTML");

// === –§—É–Ω–∫—Ü–∏–∏ ===

function generate_password($length, $req) {
    $sets = [
        'A' => 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',
        'l' => 'abcdefghijklmnopqrstuvwxyz',
        'd' => '0123456789',
        's' => '!@#$%^&*()-_=+[]{}<>?',
    ];

    $required = '';
    foreach ($req as $type => $min) {
        for ($i = 0; $i < $min; $i++) {
            $required .= $sets[$type][random_int(0, strlen($sets[$type]) - 1)];
        }
    }

    $remaining = $length - strlen($required);
    if ($remaining < 0) return '–û—à–∏–±–∫–∞: —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤.';

    $all = implode('', $sets);
    for ($i = 0; $i < $remaining; $i++) {
        $required .= $all[random_int(0, strlen($all) - 1)];
    }

    return str_shuffle($required);
}

function generate_simple_password($length) {
    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
    $digits = '0123456789';

    $first = $letters[random_int(0, strlen($letters) - 1)];
    $rest = '';
    for ($i = 1; $i < $length; $i++) {
        $set = $letters . $digits;
        $rest .= $set[random_int(0, strlen($set) - 1)];
    }
    return $first . $rest;
}

function sendMessage($chat_id, $text, $mode = "Markdown") {
    global $api;
    file_get_contents("$api/sendMessage?" . http_build_query([
        'chat_id' => $chat_id,
        'text' => $text,
        'parse_mode' => $mode,
        'disable_web_page_preview' => true                                                     
    ]));
}

function sendButtons($chat_id, $text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–∞—Ä–æ–ª—è:") {
    global $api, $config;

    $buttons = [[
        ['text' => '–ü—Ä–æ—Å—Ç–æ–π üîë', 'callback_data' => 'simple'],
        ['text' => '–°–ª–æ–∂–Ω—ã–π üß†', 'callback_data' => 'normal'],
        ['text' => '–°–≤–µ—Ä—Ö—Å–ª–æ–∂–Ω—ã–π üß¨', 'callback_data' => 'strong']
    ]];

    if ($chat_id == $config['admin_id']) {
        $buttons[] = [['text' => 'üìä –û—Ç—á—ë—Ç', 'callback_data' => 'admin_report']];
    }

    $data = [
        'chat_id' => $chat_id,
        'text' => $text,
        'reply_markup' => json_encode(['inline_keyboard' => $buttons]),
        'parse_mode' => 'Markdown'
    ];
    file_get_contents($api . "/sendMessage?" . http_build_query($data));
}

function answerCallback($callback_id) {
    global $api;
    file_get_contents($api . "/answerCallbackQuery?callback_query_id=$callback_id");
}

function sendIntro($chat_id) {
    $text = <<<TXT
üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ä–æ–ª–µ–π!

–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤–∏–¥–∞: `12A2s2` ‚Äî —ç—Ç–æ –∑–Ω–∞—á–∏—Ç:
- 12 —Å–∏–º–≤–æ–ª–æ–≤
- –º–∏–Ω–∏–º—É–º 2 –∑–∞–≥–ª–∞–≤–Ω—ã—Ö (A2)
- –º–∏–Ω–∏–º—É–º 2 —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–∞ (s2)

–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ.

‚ÑπÔ∏è –ú—ã –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä–æ–ª–∏. –ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –Ω–µ–ª—å–∑—è.
üíª –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –±–æ—Ç–∞: [GitHub](https://github.com/telema93/pwdgenbot)
üìµ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.
TXT;

    sendButtons($chat_id, $text);
}
